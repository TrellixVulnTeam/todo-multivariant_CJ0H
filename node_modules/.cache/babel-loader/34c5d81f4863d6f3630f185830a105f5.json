{"ast":null,"code":"// import redux from \"redux\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  showCounter: false,\n  counter: 0\n};\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      // showCounter: state.showCounter,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount // showCounter: state.showCounter,\n\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["D:/PROJECTS/REACT_PRACTICE/redux/redux-practice/src/store/index.js"],"names":["createStore","initialState","showCounter","counter","counterReducer","state","action","type","amount","store"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACL;AACAJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAFpB,KAAP;AAID;;AAED,MAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACE,MAD3B,CAEL;;AAFK,KAAP;AAID;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AADpB,KAAP;AAGD;;AAED,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLJ,MAAAA,OAAO,EAAEE,KAAK,CAACF,OADV;AAELD,MAAAA,WAAW,EAAE,CAACG,KAAK,CAACH;AAFf,KAAP;AAID;;AAED,SAAOG,KAAP;AACD,CA7BD;;AA+BA,MAAMI,KAAK,GAAGT,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["// import redux from \"redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  showCounter: false,\r\n  counter: 0,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      // showCounter: state.showCounter,\r\n      counter: state.counter + 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      // showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}