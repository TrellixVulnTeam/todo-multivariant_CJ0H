{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    showCounter: false\n  },\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      showCounter = !state.showCounter;\n    }\n\n  }\n});\nimport { createStore } from \"redux\";\nconst initialState = {\n  showCounter: false,\n  counter: 0\n};\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      showCounter: state.showCounter,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["D:/PROJECTS/REACT_PRACTICE/redux/redux-practice/src/store/index.js"],"names":["createSlice","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","amount","toggle","createStore","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAFiB;AAG/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACJ,OAAN;AACD,KAHO;;AAIRK,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACJ,OAAN;AACD,KANO;;AAORM,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBP,MAAAA,OAAO,GAAGI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAAjC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZH,MAAAA,WAAW,GAAG,CAACG,KAAK,CAACH,WAArB;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,SAASS,WAAT,QAA4B,OAA5B;AAEA,MAAMX,YAAY,GAAG;AACnBE,EAAAA,WAAW,EAAE,KADM;AAEnBD,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMW,cAAc,GAAG,CAACP,KAAK,GAAGL,YAAT,EAAuBQ,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACK,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,WAAW,EAAEG,KAAK,CAACH,WADd;AAELD,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAFpB,KAAP;AAID;;AAED,MAAIO,MAAM,CAACK,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAD3B;AAELP,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,KAAP;AAID;;AAED,MAAIM,MAAM,CAACK,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFd,KAAP;AAID;;AAED,MAAIM,MAAM,CAACK,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OADV;AAELC,MAAAA,WAAW,EAAE,CAACG,KAAK,CAACH;AAFf,KAAP;AAID;;AAED,SAAOG,KAAP;AACD,CA9BD;;AAgCA,MAAMS,KAAK,GAAGH,WAAW,CAACC,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: { counter: 0, showCounter: false },\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      counter = state.counter + action.amount;\r\n    },\r\n    toggle(state) {\r\n      showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nimport { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  showCounter: false,\r\n  counter: 0,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      showCounter: state.showCounter,\r\n      counter: state.counter + 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}