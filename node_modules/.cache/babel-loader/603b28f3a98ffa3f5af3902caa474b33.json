{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalAmount: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        tate.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totolPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["D:/PROJECTS/REACT_PRACTICE/redux_advanced/redux_advanced/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalAmount","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","tate","push","itemId","price","quantity","totolPrice","title","totalPrice","removeItem","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE;AAA1B,GAFc;AAG5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;;AACA,UAAI,CAACH,YAAL,EAAmB;AACjBI,QAAAA,IAAI,CAACZ,KAAL,CAAWa,IAAX,CAAgB;AACdC,UAAAA,MAAM,EAAER,OAAO,CAACK,EADF;AAEdI,UAAAA,KAAK,EAAET,OAAO,CAACS,KAFD;AAGdC,UAAAA,QAAQ,EAAE,CAHI;AAIdC,UAAAA,UAAU,EAAEX,OAAO,CAACS,KAJN;AAKdjB,UAAAA,IAAI,EAAEQ,OAAO,CAACY;AALA,SAAhB;AAOD,OARD,MAQO;AACLV,QAAAA,YAAY,CAACQ,QAAb;AACAR,QAAAA,YAAY,CAACW,UAAb,GAA0BX,YAAY,CAACW,UAAb,GAA0Bb,OAAO,CAACS,KAA5D;AACD;AACF,KAhBO;;AAiBRK,IAAAA,UAAU,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;;AACA,UAAIH,YAAY,CAACQ,QAAb,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYqB,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,CAACQ,QAAb;AACAR,QAAAA,YAAY,CAACW,UAAb,GAA0BX,YAAY,CAACW,UAAb,GAA0BX,YAAY,CAACO,KAAjE;AACD;AACF;;AA1BO;AAHkB,CAAD,CAA7B;AAiCA,OAAO,MAAMO,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AAEP,eAAe1B,SAAS,CAAC2B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { items: [], totalAmount: 0 },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        tate.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totolPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}