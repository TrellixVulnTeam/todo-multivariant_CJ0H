{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterInitialState = {\n  counter: 0,\n  showCounter: false\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: counterInitialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst authInitialState = {\n  isAuthenticated: false\n};\ncreateSlice({\n  name: 'auth',\n  initialState: authInitialState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["D:/PROJECTS/REACT_PRACTICE/redux/redux-practice/src/store/index.js"],"names":["createSlice","configureStore","counterInitialState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","authInitialState","isAuthenticated","login","counterActions","actions","store","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KANO;;AAORS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAzB;AAEAjB,WAAW,CAAC;AACVM,EAAAA,IAAI,EAAC,MADK;AAEVC,EAAAA,YAAY,EAACS,gBAFH;AAGVR,EAAAA,QAAQ,EAAC;AACPU,IAAAA,KAAK,CAACR,KAAD,EAAO;AACVA,MAAAA,KAAK,CAACO,eAAN;AACD;;AAHM;AAHC,CAAD,CAAX;AAUA,OAAO,MAAME,cAAc,GAAGd,YAAY,CAACe,OAApC;AAEP,MAAMC,KAAK,GAAGpB,cAAc,CAAC;AAAEqB,EAAAA,OAAO,EAAEjB,YAAY,CAACiB;AAAxB,CAAD,CAA5B;AAEA,eAAeD,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst counterInitialState = { counter: 0, showCounter: false };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: counterInitialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst authInitialState = { isAuthenticated: false };\r\n\r\ncreateSlice({\r\n  name:'auth',\r\n  initialState:authInitialState,\r\n  reducers:{\r\n    login(state){\r\n      state.isAuthenticated\r\n    }\r\n  }\r\n})\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nconst store = configureStore({ reducer: counterSlice.reducer });\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}