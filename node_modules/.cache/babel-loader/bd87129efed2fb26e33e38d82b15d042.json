{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    counter: 0,\n    showCounter: false\n  },\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["D:/PROJECTS/REACT_PRACTICE/redux/redux-practice/src/store/index.js"],"names":["createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","amount","toggle","counterActions","actions","store","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAFiB;AAG/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACJ,OAAN;AACD,KAHO;;AAIRK,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACJ,OAAN;AACD,KANO;;AAORM,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACtBH,MAAAA,KAAK,CAACJ,OAAN,GAAgBI,KAAK,CAACJ,OAAN,GAAgBO,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACH,WAAN,GAAoB,CAACG,KAAK,CAACH,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,OAAO,MAAMS,cAAc,GAAGb,YAAY,CAACc,OAApC;AAEP,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AAAEiB,EAAAA,OAAO,EAAEhB,YAAY,CAACgB;AAAxB,CAAD,CAA5B;AAEA,eAAeD,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: { counter: 0, showCounter: false },\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nconst store = configureStore({ reducer: counterSlice.reducer });\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}